val avg1 = ratingsDf.agg(expr("mean(votes_1)")).collect()(0)(0)
val avg2 = ratingsDf.agg(expr("mean(votes_2)")).collect()(0)(0)
val avg3 = ratingsDf.agg(expr("mean(votes_3)")).collect()(0)(0)
val avg4 = ratingsDf.agg(expr("mean(votes_4)")).collect()(0)(0)
val avg5 = ratingsDf.agg(expr("mean(votes_5)")).collect()(0)(0)
val avg6 = ratingsDf.agg(expr("mean(votes_6)")).collect()(0)(0)
val avg7 = ratingsDf.agg(expr("mean(votes_7)")).collect()(0)(0)
val avg8 = ratingsDf.agg(expr("mean(votes_8)")).collect()(0)(0)
val avg9 = ratingsDf.agg(expr("mean(votes_9)")).collect()(0)(0)
val avg10 = ratingsDf.agg(expr("mean(votes_10)")).collect()(0)(0)

var myRatings = ratingsDf.withColumn("my_mean_vote_1", lit(avg1))
myRatings = myRatings.withColumn("my_mean_vote_2", lit(avg2))
myRatings = myRatings.withColumn("my_mean_vote_3", lit(avg3))
myRatings = myRatings.withColumn("my_mean_vote_4", lit(avg4))
myRatings = myRatings.withColumn("my_mean_vote_5", lit(avg5))
myRatings = myRatings.withColumn("my_mean_vote_6", lit(avg6))
myRatings = myRatings.withColumn("my_mean_vote_7", lit(avg7))
myRatings = myRatings.withColumn("my_mean_vote_8", lit(avg8))
myRatings = myRatings.withColumn("my_mean_vote_9", lit(avg9))
myRatings = myRatings.withColumn("my_mean_vote_10", lit(avg10))

//myRatings = myRatings.withColumn("apx_med_1", myRatings.agg(expr("approx_percentile(votes_1, 0.5, 100) as apx_med_1")))
val med1 = myRatings.agg(expr("approx_percentile(votes_1, 0.5, 100)")).collect()(0)(0)
val med2 = myRatings.agg(expr("approx_percentile(votes_2, 0.5, 100)")).collect()(0)(0)
val med3 = myRatings.agg(expr("approx_percentile(votes_3, 0.5, 100)")).collect()(0)(0)
val med4 = myRatings.agg(expr("approx_percentile(votes_4, 0.5, 100)")).collect()(0)(0)
val med5 = myRatings.agg(expr("approx_percentile(votes_5, 0.5, 100)")).collect()(0)(0)
val med6 = myRatings.agg(expr("approx_percentile(votes_6, 0.5, 100)")).collect()(0)(0)
val med7 = myRatings.agg(expr("approx_percentile(votes_7, 0.5, 100)")).collect()(0)(0)
val med8 = myRatings.agg(expr("approx_percentile(votes_8, 0.5, 100)")).collect()(0)(0)
val med9 = myRatings.agg(expr("approx_percentile(votes_9, 0.5, 100)")).collect()(0)(0)
val med10 = myRatings.agg(expr("approx_percentile(votes_10, 0.5, 100)")).collect()(0)(0)
myRatings = myRatings.withColumn("apx_med_1", lit(med1))
myRatings = myRatings.withColumn("apx_med_2", lit(med2))
myRatings = myRatings.withColumn("apx_med_3", lit(med3))
myRatings = myRatings.withColumn("apx_med_4", lit(med4))
myRatings = myRatings.withColumn("apx_med_5", lit(med5))
myRatings = myRatings.withColumn("apx_med_6", lit(med6))
myRatings = myRatings.withColumn("apx_med_7", lit(med7))
myRatings = myRatings.withColumn("apx_med_8", lit(med8))
myRatings = myRatings.withColumn("apx_med_9", lit(med9))
myRatings = myRatings.withColumn("apx_med_10", lit(med10))